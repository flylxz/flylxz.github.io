{"version":3,"sources":["components/Add/Add.js","components/Doit/Doit.js","components/Inprogress/Inprogress.js","components/Done/Done.js","components/Aborted/Aborted.js","components/Board/Board.js","components/Modal/Modal.js","components/Base/Base.js","App.js","serviceWorker.js","index.js"],"names":["Add","handleClick","e","props","setStateModal","className","onClick","this","React","Component","Doit","proceedHandleClick","card","Object","assign","type","moveCard","abortHandleClick","priority","name","text","date","Inprogress","Done","removeHandleClick","removeCard","Aborted","Board","objectFilter","cards","_cards","id","objectToArray","keys","map","sortingArray","array","sort","a","b","getCardsForDoIt","_array","key","getCardsForInprogress","getCardsForDone","getCardsForAborted","Modal","priorities","low","normal","high","state","time","getPriority","item","cancelClick","textAreaOnChange","setState","target","value","priorityOnChange","okClick","timestamp","Date","now","currentDate","addCard","toLocaleString","onSubmit","placeholder","rows","cols","onChange","Base","stateModal","console","log","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","savedCards","parse","getItem","getModal","saveToStorage","App","componentWillMount","componentWillUnmount","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.796754d4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Add.css\";\n\nclass Add extends React.Component {\n  handleClick = e => {\n    this.props.setStateModal(true);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"addButton\" onClick={this.handleClick}>\n          Add\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Add;\n","import React from 'react';\nimport './Doit.css';\n\nclass Doit extends React.Component {\n  proceedHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    card.type = 'inprogress';\n    this.props.moveCard(card);\n  };\n  abortHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    card.type = 'aborted';\n    this.props.moveCard(card);\n  };\n\n  // setNoteColor = () => {\n  //   let color;\n  //   switch (this.props.card.priority.id) {\n  //     case 3:\n  //       color = '.hi-priority-note';\n  //       break;\n  //     default:\n  //       color = '.normal-priority-note';\n  //       break;\n  //     case 1:\n  //       color = '.low-priority-note';\n  //       break;\n  //   }\n  //   console.log(this.props.card.priority.id);\n  //   console.log(color);\n  //   return color;\n  // };\n\n  render() {\n    return (\n      <div className='note'>\n        <div /*className={this.setNoteColor()}*/ className='note-field'>\n          <div>{this.props.card.priority.name}</div>\n          <div>\n            {this.props.card.text}\n            <div />\n            <div>{this.props.card.date}</div>\n          </div>\n          <div className='buttons'>\n            <div className='green-button' onClick={this.proceedHandleClick}>\n              Proceed\n            </div>\n            <div className='red-button' onClick={this.abortHandleClick}>\n              Abort\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Doit;\n","import React from 'react';\nimport './Inprogress.css';\n\nclass Inprogress extends React.Component {\n  proceedHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    card.type = 'done';\n    this.props.moveCard(card);\n  };\n  abortHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    card.type = 'aborted';\n    this.props.moveCard(card);\n  };\n\n  render() {\n    return (\n      <div className='note'>\n        <div /*className={setNoteColor()}*/ className='note-field'>\n          <div>{this.props.card.priority.name}</div>\n          <div>\n            {this.props.card.text}\n            <div />\n            <div>{this.props.card.date}</div>\n          </div>\n          <div className='buttons'>\n            <div className='green-button' onClick={this.proceedHandleClick}>\n              Proceed\n            </div>\n            <div className='red-button' onClick={this.abortHandleClick}>\n              Abort\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Inprogress;\n","import React from 'react';\nimport './Done.css';\n\nclass Done extends React.Component {\n  removeHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    this.props.removeCard(card);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='note'>\n          <div className='note-field'>\n            <div>{this.props.card.priority.name}</div>\n            <div>\n              {this.props.card.text}\n              <div />\n              <div>{this.props.card.date}</div>\n            </div>\n          </div>\n          <div className='buttons'>\n            <div className='red-button' onClick={this.removeHandleClick}>\n              Remove\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Done;\n","import React from 'react';\nimport './Aborted.css';\n\nclass Aborted extends React.Component {\n  removeHandleClick = e => {\n    const card = Object.assign({}, this.props.card);\n    this.props.removeCard(card);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='note'>\n          <div className='note-field'>\n            <div>{this.props.card.priority.name}</div>\n            <div>\n              {this.props.card.text}\n              <div />\n              <div>{this.props.card.date}</div>\n            </div>\n          </div>\n          <div className='buttons'>\n            <div className='red-button' onClick={this.removeHandleClick}>\n              Remove\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Aborted;\n","import React from 'react';\nimport Add from '../Add/Add';\nimport './Board.css';\nimport Doit from '../Doit/Doit';\nimport Inprogress from '../Inprogress/Inprogress';\nimport Done from '../Done/Done';\nimport Aborted from '../Aborted/Aborted';\n\nclass Board extends React.Component {\n  objectFilter = (cards, type) => {\n    const _cards = {};\n    for (let id in cards) {\n      const card = cards[id];\n      if (card.type === type) _cards[id] = card;\n    }\n    return _cards;\n  };\n\n  objectToArray = cards => {\n    return Object.keys(cards).map(id => {\n      return cards[id];\n    });\n  };\n\n  sortingArray = array => {\n    array.sort((a, b) => {\n      if (a.priority.id > b.priority.id) return -1;\n      if (a.priority.id < b.priority.id) return 1;\n      if (a.date > b.date) return -1;\n      if (a.date < b.date) return 1;\n      return 0;\n    });\n  };\n\n  getCardsForDoIt = () => {\n    const cards = this.objectFilter(this.props.cards, 'doit');\n    const _array = this.objectToArray(cards);\n    this.sortingArray(_array);\n\n    return _array.map(card => (\n      <Doit key={card.id} card={card} moveCard={this.props.moveCard} />\n    ));\n  };\n\n  getCardsForInprogress = () => {\n    const cards = this.objectFilter(this.props.cards, 'inprogress');\n    const _array = this.objectToArray(cards);\n    this.sortingArray(_array);\n\n    return _array.map(card => (\n      <Inprogress key={card.id} card={card} moveCard={this.props.moveCard} />\n    ));\n  };\n\n  getCardsForDone = () => {\n    const cards = this.objectFilter(this.props.cards, 'done');\n    const _array = this.objectToArray(cards);\n    this.sortingArray(_array);\n\n    return _array.map(card => (\n      <Done key={card.id} card={card} removeCard={this.props.removeCard} />\n    ));\n  };\n\n  getCardsForAborted = () => {\n    const cards = this.objectFilter(this.props.cards, 'aborted');\n    const _array = this.objectToArray(cards);\n    this.sortingArray(_array);\n\n    return _array.map(card => (\n      <Aborted key={card.id} card={card} removeCard={this.props.removeCard} />\n    ));\n  };\n\n  render() {\n    return (\n      <div className='table'>\n        <h2>Kanban</h2>\n        <div className='table-header'>\n          <div className='top'>\n            Do it <Add setStateModal={this.props.setStateModal} />\n          </div>\n          <div className='top'>In progress</div>\n          <div className='top'>Done</div>\n          <div className='top'>Aborted</div>\n        </div>\n        <div className='table-body'>\n          <div className='bottom'>{this.getCardsForDoIt()}</div>\n          <div className='bottom'>{this.getCardsForInprogress()}</div>\n          <div className='bottom'>{this.getCardsForDone()}</div>\n          <div className='bottom'>{this.getCardsForAborted()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Modal.css';\n\nclass Modal extends React.Component {\n  priorities = {\n    low: { id: 1, name: 'Low' },\n    normal: { id: 2, name: 'Normal' },\n    high: { id: 3, name: 'High' }\n  };\n\n  state = {\n    id: null,\n    type: null,\n    time: null,\n    priority: this.priorities.normal,\n    text: ''\n  };\n\n  getPriority = id => {\n    for (let item in this.priorities) {\n      if (this.priorities[item].id === +id) return this.priorities[item];\n    }\n    return 1;\n  };\n\n  cancelClick = () => {\n    this.props.setStateModal(false);\n  };\n\n  textAreaOnChange = e => {\n    this.setState({ text: e.target.value });\n  };\n\n  priorityOnChange = e => {\n    this.setState({ priority: this.getPriority(e.target.value) });\n  };\n\n  okClick = () => {\n    let timestamp = Date.now();\n    let currentDate = new Date(timestamp);\n    this.props.addCard({\n      id: timestamp,\n      type: 'doit',\n      date: currentDate.toLocaleString(),\n      priority: this.state.priority,\n      text: this.state.text\n    });\n    this.props.setStateModal(false);\n  };\n\n  render() {\n    return (\n      <div className='shell'>\n        <div className='modal'>\n          <div className='form' onSubmit={this.okClick}>\n            <label>New task</label>\n            <textarea\n              name='task'\n              placeholder='Enter new task here'\n              rows='5'\n              cols='20'\n              value={this.state.text}\n              onChange={this.textAreaOnChange}\n            />\n            <label>\n              Priority\n              <select\n                name='priority'\n                onChange={this.priorityOnChange}\n                value={this.state.priority.id}\n              >\n                <option value={this.priorities.high.id}>\n                  {this.priorities.high.name}\n                </option>\n                <option value={this.priorities.normal.id}>\n                  {this.priorities.normal.name}\n                </option>\n                <option value={this.priorities.low.id}>\n                  {this.priorities.low.name}\n                </option>\n              </select>\n            </label>\n            <div className='customButtons'>\n              <div className='cancelButton' onClick={this.cancelClick}>\n                Cancel\n              </div>\n              <div className='okButton' onClick={this.okClick}>\n                Ok\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport Board from '../Board/Board';\nimport Modal from '../Modal/Modal';\n\nclass Base extends React.Component {\n  state = {\n    stateModal: false,\n    cards: {}\n  };\n\n  addCard = card => {\n    let cards = Object.assign({}, this.state.cards);\n    cards[card.id] = card;\n    this.setState({ cards: cards });\n    console.log(this.state.cards);\n  };\n\n  moveCard = card => {\n    let cards = Object.assign({}, this.state.cards);\n    cards[card.id] = card;\n    this.setState({ cards: cards });\n  };\n\n  removeCard = card => {\n    let cards = Object.assign({}, this.state.cards);\n    delete cards[card.id];\n    this.setState({ cards: cards });\n  };\n\n  componentDidUpdate = () => {\n    localStorage.setItem('savedCards', JSON.stringify(this.state.cards));\n  };\n\n  componentDidMount = () => {\n    let savedCards = JSON.parse(localStorage.getItem('savedCards'));\n    if (savedCards) {\n      this.setState({ cards: savedCards });\n    }\n  };\n\n  getModal = () => {\n    if (this.state.stateModal)\n      return (\n        <Modal setStateModal={this.setStateModal} addCard={this.addCard} />\n      );\n    return null;\n  };\n\n  setStateModal = stateModal => {\n    this.setState({ stateModal: stateModal });\n  };\n\n  render() {\n    return (\n      <div>\n        <Board\n          setStateModal={this.setStateModal}\n          cards={this.state.cards}\n          moveCard={this.moveCard}\n          removeCard={this.removeCard}\n          saveToStorage={this.saveToStorage}\n        />\n        {this.getModal()}\n      </div>\n    );\n  }\n}\n\nexport default Base;\n","import React from \"react\";\nimport Base from \"./components/Base/Base\";\n\nclass App extends React.Component {\n  componentWillMount = () => {\n    console.log(\"will mount\");\n  };\n\n  render() {\n    console.log(\"render\");\n    return <Base />;\n  }\n\n  componentDidMount = () => {\n    console.log(\"did mount\");\n  };\n\n  componentWillUnmount = () => {\n    console.log(\"unmount\");\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}