{"version":3,"sources":["components/Box01/Box01.js","components/Box02/Box02.js","components/Food/Food.js","components/Restart/Restart.js","components/Pause/Pause.js","components/Field/Field.js","App.js","serviceWorker.js","index.js"],"names":["Box01","top","this","props","movingBox","y","left","x","boxSize","className","style","height","width","React","Component","Box02","Food","timeoutDestroy","componentDidMount","setTimeout","destroy","timeDestroy","componentWillUnmount","clearTimeout","food","id","foodPosX","position","foodSize","Restart","restartClick","e","setStateRestart","onClick","Pause","Field","intervalSnake01","intervalSnake02","intervalFood","state","positionStack01","positionStack02","vector01","vector02","stateRestart","gamePaused","foodStack","foodQueue","newFood","generateFood","prevFood","foodOnSnake01","foodOnSnake02","foodOnFood","Object","assign","setState","initSnake01","initSnake02","window","addEventListener","handleInput01","handleInput02","getRestart","startPosition01","_cell","countSnake","dirCode","Math","floor","random","setInterval","move01","startPosition02","move02","snakeFeed01","nextPosition","keys","forEach","key","snakeGrow01","snakeFeed02","snakeGrow02","positionStack","length","end","snakePosition01","snakePosition02","foodPosition","selfCollision","snakePosition","gameOver","withOtherCollision","borderCollision","topBorder","bottomBorder","calcFieldHeight","leftBorder","rightBorder","calcFieldWidth","clearInterval","changePosition01","position01","i","current01","prev01","changePosition02","position02","current","prev","code","head01","head02","renderField","renderFood","renderBoxes01","renderBoxes02","boxes","map","innerHeight","innerWidth","randomizerFood","randomizerSnake","cellSize","count","snake01","0","snake02","timestamp","Date","now","foodUnit","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.088c30d0.chunk.js","sourcesContent":["import React from 'react';\nimport './Box01.css';\n\nclass Box01 extends React.Component {\n  render() {\n    let setPositionY = this.props.movingBox.y;\n    let setPositionX = this.props.movingBox.x;\n    let top = setPositionY + 'px';\n    let left = setPositionX + 'px';\n    let boxSize = this.props.boxSize - 4;\n\n    return (\n      <div\n        className='box-01'\n        style={{ left: left, top: top, height: boxSize, width: boxSize }}\n      ></div>\n    );\n  }\n}\n\nexport default Box01;\n","import React from 'react';\nimport './Box02.css';\n\nclass Box02 extends React.Component {\n  render() {\n    let setPositionY = this.props.movingBox.y;\n    let setPositionX = this.props.movingBox.x;\n    let top = setPositionY + 'px';\n    let left = setPositionX + 'px';\n    let boxSize = this.props.boxSize - 4;\n\n    return (\n      <div\n        className='box-02'\n        style={{ left: left, top: top, height: boxSize, width: boxSize }}\n      ></div>\n    );\n  }\n}\n\nexport default Box02;\n","import React from 'react';\nimport './Food.css';\n\nclass Food extends React.Component {\n  timeoutDestroy = 0;\n  componentDidMount = () => {\n    this.timeoutDestroy = setTimeout(\n      this.destroy,\n      this.props.timeDestroy * 1000\n    );\n  };\n\n  componentWillUnmount = () => {\n    clearTimeout(this.timeoutDestroy);\n  };\n\n  destroy = () => {\n    this.props.destroy(this.props.food.id);\n  };\n\n  render() {\n    let foodPosX = this.props.food.position.x;\n    let foodPosY = this.props.food.position.y;\n    let top = foodPosY + 'px';\n    let left = foodPosX + 'px';\n    let foodSize = this.props.foodSize - 4;\n\n    return (\n      <div\n        className='food'\n        style={{\n          left: left,\n          top: top,\n          height: foodSize,\n          width: foodSize\n        }}\n      ></div>\n    );\n  }\n}\n\nexport default Food;\n","import React from 'react';\nimport './Restart.css';\n\nclass Restart extends React.Component {\n  restartClick = e => {\n    this.props.setStateRestart(false);\n  };\n\n  render() {\n    return (\n      <div className='restart-box'>\n        <div>GAME OVER</div>\n        <div className='button-restart' onClick={this.restartClick}>\n          Restart\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Restart;\n","import React from 'react';\nimport './Pause.css';\n\nclass Pause extends React.Component {\n  render() {\n    return <div className='pause'>PAUSE</div>;\n  }\n}\n\nexport default Pause;\n","import React from 'react';\nimport './Field.css';\nimport Box01 from '../Box01/Box01';\nimport Box02 from '../Box02/Box02';\nimport Food from '../Food/Food';\nimport Restart from '../Restart/Restart';\nimport Pause from '../Pause/Pause';\n\nclass Field extends React.Component {\n  static _cell = 15;\n  static countSnake = 4;\n  static height = window.innerHeight;\n  static width = window.innerWidth;\n  static calcFieldHeight =\n    Math.floor((Field.height - Field._cell * 2) / Field._cell) * Field._cell -\n    Field._cell;\n  static calcFieldWidth =\n    Math.floor((Field.width - Field._cell * 2) / Field._cell) * Field._cell -\n    Field._cell;\n\n  intervalSnake01 = 0;\n  intervalSnake02 = 0;\n  intervalFood = 0;\n\n  state = {\n    positionStack01: {},\n    positionStack02: {},\n    vector01: '',\n    vector02: '',\n    stateRestart: false,\n    gamePaused: false,\n    foodStack: {}\n  };\n\n  static randomizerFood = () => {\n    const randomX =\n      Math.floor(\n        Math.floor(Math.random() * Field.calcFieldWidth) / Field._cell\n      ) * Field._cell;\n\n    const randomY =\n      Math.floor(\n        Math.floor(Math.random() * Field.calcFieldHeight) / Field._cell\n      ) * Field._cell;\n    return { x: randomX, y: randomY };\n  };\n\n  static randomizerSnake = () => {\n    const randomX =\n      Math.floor(\n        Math.floor(\n          Math.random() * (Field.calcFieldWidth - Field._cell * 4) +\n            Field._cell * 2\n        ) / Field._cell\n      ) * Field._cell;\n\n    const randomY =\n      Math.floor(\n        Math.floor(\n          Math.random() * (Field.calcFieldHeight - Field._cell * 4) +\n            Field._cell * 2\n        ) / Field._cell\n      ) * Field._cell;\n    return { x: randomX, y: randomY };\n  };\n\n  static startPosition01 = (cellSize, count) => {\n    const snake01 = {\n      0: Field.randomizerSnake()\n    };\n    for (let i = 1; i < count; i++) {\n      const prev = snake01[i - 1];\n      const current = { x: prev.x, y: prev.y };\n      snake01[i] = current;\n    }\n    return snake01;\n  };\n\n  static startPosition02 = (cellSize, count) => {\n    const snake02 = {\n      0: Field.randomizerSnake()\n    };\n    for (let i = 1; i < count; i++) {\n      const prev = snake02[i - 1];\n      const current = { x: prev.x, y: prev.y };\n      snake02[i] = current;\n    }\n    return snake02;\n  };\n\n  static generateFood = () => {\n    let timestamp = Date.now();\n    let foodUnit = {};\n    foodUnit.id = timestamp;\n    foodUnit.position = Field.randomizerFood();\n    return foodUnit;\n  };\n\n  foodQueue = () => {\n    let newFood = Field.generateFood();\n    let prevFood = this.state.foodStack;\n    if (this.foodOnSnake01(newFood, this.state.positionStack01)) {\n      newFood = Field.generateFood();\n      if (this.foodOnSnake01(newFood, this.state.positionStack01)) return null;\n    }\n    if (this.foodOnSnake02(newFood, this.state.positionStack02)) {\n      newFood = Field.generateFood();\n      if (this.foodOnSnake02(newFood, this.state.positionStack02)) return null;\n    }\n    if (this.foodOnFood(newFood, prevFood)) {\n      newFood = Field.generateFood();\n      if (this.foodOnFood(newFood, prevFood)) return null;\n    }\n    let foodStack = Object.assign({}, prevFood);\n    foodStack[newFood.id] = newFood;\n    this.setState({ foodStack: foodStack });\n  };\n\n  componentDidMount = () => {\n    this.initSnake01();\n    this.initSnake02();\n\n    window.addEventListener('keydown', this.handleInput01, true);\n    window.addEventListener('keydown', this.handleInput02, true);\n  };\n\n  setStateRestart = stateRestart => {\n    this.setState({\n      stateRestart: stateRestart,\n      foodStack: {}\n    });\n    this.initSnake01();\n    this.initSnake02();\n  };\n\n  getRestart = () => {\n    if (this.state.stateRestart)\n      return <Restart setStateRestart={this.setStateRestart} />;\n    return null;\n  };\n\n  initSnake01 = () => {\n    this.setState({\n      positionStack01: Field.startPosition01(Field._cell, Field.countSnake),\n      vector01: ''\n    });\n    const dirCode = Math.floor(Math.random() * (5 - 1)) + 1;\n    if (dirCode === 1) {\n      this.setState({ vector01: 'ArrowUp' });\n    }\n    if (dirCode === 2) {\n      this.setState({ vector01: 'ArrowDown' });\n    }\n    if (dirCode === 3) {\n      this.setState({ vector01: 'ArrowLeft' });\n    }\n    if (dirCode === 4) {\n      this.setState({ vector01: 'ArrowRight' });\n    }\n\n    this.intervalSnake01 = setInterval(this.move01, 500);\n    this.intervalFood = setInterval(this.foodQueue, 1000);\n  };\n\n  initSnake02 = () => {\n    this.setState({\n      positionStack02: Field.startPosition02(Field._cell, Field.countSnake),\n      vector02: ''\n    });\n    const dirCode = Math.floor(Math.random() * (5 - 1)) + 1;\n    if (dirCode === 1) {\n      this.setState({ vector02: 'KeyW' });\n    }\n    if (dirCode === 2) {\n      this.setState({ vector02: 'KeyS' });\n    }\n    if (dirCode === 3) {\n      this.setState({ vector02: 'KeyA' });\n    }\n    if (dirCode === 4) {\n      this.setState({ vector02: 'KeyD' });\n    }\n    this.intervalSnake02 = setInterval(this.move02, 500);\n  };\n\n  snakeFeed01 = (nextPosition, foodStack) => {\n    const keysFood = Object.keys(foodStack);\n    keysFood.forEach(key => {\n      if (\n        nextPosition.x === foodStack[key].position.x &&\n        nextPosition.y === foodStack[key].position.y\n      ) {\n        this.snakeGrow01();\n        delete foodStack[key];\n        this.setState({ foodStack: foodStack });\n      }\n    });\n  };\n\n  snakeFeed02 = (nextPosition, foodStack) => {\n    const keysFood = Object.keys(foodStack);\n    keysFood.forEach(key => {\n      if (\n        nextPosition.x === foodStack[key].position.x &&\n        nextPosition.y === foodStack[key].position.y\n      ) {\n        this.snakeGrow02();\n        delete foodStack[key];\n        this.setState({ foodStack: foodStack });\n      }\n    });\n  };\n\n  snakeGrow01 = () => {\n    const positionStack = { ...this.state.positionStack01 };\n    const countSnake = Object.keys(positionStack).length;\n    const end = positionStack[countSnake - 1];\n    positionStack[countSnake] = { x: end.x, y: end.y };\n    this.setState({ positionStack01: positionStack });\n  };\n\n  snakeGrow02 = () => {\n    const positionStack = { ...this.state.positionStack02 };\n    const countSnake = Object.keys(positionStack).length;\n    const end = positionStack[countSnake - 1];\n    positionStack[countSnake] = { x: end.x, y: end.y };\n    this.setState({ positionStack02: positionStack });\n  };\n\n  foodOnSnake01 = (newFood, snakePosition01) => {\n    let keysSnake01 = Object.keys(snakePosition01);\n    keysSnake01.forEach(key => {\n      if (\n        newFood.position.x === snakePosition01[key].x &&\n        newFood.position.y === snakePosition01[key].y\n      )\n        return;\n    });\n  };\n\n  foodOnSnake02 = (newFood, snakePosition02) => {\n    let keysSnake02 = Object.keys(snakePosition02);\n    keysSnake02.forEach(key => {\n      if (\n        newFood.position.x === snakePosition02[key].x &&\n        newFood.position.y === snakePosition02[key].y\n      )\n        return;\n    });\n  };\n\n  foodOnFood = (newFood, foodPosition) => {\n    let keysFood = Object.keys(foodPosition);\n    keysFood.forEach(key => {\n      if (\n        newFood.position.x === foodPosition[key].position.x &&\n        newFood.position.y === foodPosition[key].position.y\n      )\n        return;\n    });\n  };\n\n  selfCollision = (position, snakePosition) => {\n    let keysSnake = Object.keys(snakePosition);\n    keysSnake.forEach(key => {\n      if (\n        position.x === snakePosition[key].x &&\n        position.y === snakePosition[key].y\n      )\n        this.gameOver();\n    });\n  };\n\n  withOtherCollision = (position, snakePosition) => {\n    let keysSnake = Object.keys(snakePosition);\n    keysSnake.forEach(key => {\n      if (\n        position.x === snakePosition[key].x &&\n        position.y === snakePosition[key].y\n      )\n        this.gameOver();\n    });\n  };\n\n  borderCollision = position => {\n    const topBorder = -Field._cell;\n    const bottomBorder = Field.calcFieldHeight;\n    const leftBorder = -Field._cell;\n    const rightBorder = Field.calcFieldWidth;\n    if (\n      position.x <= leftBorder ||\n      position.x >= rightBorder ||\n      position.y <= topBorder ||\n      position.y >= bottomBorder\n    )\n      this.gameOver();\n  };\n\n  gamePaused = () => {\n    if (this.state.gamePaused) {\n      this.setState({ gamePaused: false });\n      this.intervalSnake01 = setInterval(this.move01, 500);\n      this.intervalSnake02 = setInterval(this.move02, 500);\n      this.intervalFood = setInterval(this.foodQueue, 1000);\n      // return null;\n    } else {\n      this.setState({ gamePaused: true });\n      clearInterval(this.intervalSnake01);\n      clearInterval(this.intervalSnake02);\n      clearInterval(this.intervalFood);\n      return <Pause />;\n    }\n  };\n\n  gameOver = () => {\n    clearInterval(this.intervalSnake01);\n    clearInterval(this.intervalSnake02);\n    clearInterval(this.intervalFood);\n    this.setState({ stateRestart: true });\n  };\n\n  changePosition01 = position01 => {\n    const foodStack = { ...this.state.foodStack };\n    this.snakeFeed01(position01, foodStack);\n    const positionStack01 = { ...this.state.positionStack01 };\n    if (this.withOtherCollision(position01, this.state.positionStack02));\n    if (this.selfCollision(position01, positionStack01));\n    if (!this.borderCollision(position01));\n    const countSnake01 = Object.keys(positionStack01).length;\n    for (let i = countSnake01 - 1; i >= 1; i--) {\n      positionStack01[i] = {};\n      const current01 = positionStack01[i];\n      const prev01 = positionStack01[i - 1];\n      current01.x = prev01.x;\n      current01.y = prev01.y;\n    }\n    positionStack01[0].x = position01.x;\n    positionStack01[0].y = position01.y;\n    this.setState({ positionStack01: positionStack01 });\n  };\n\n  changePosition02 = position02 => {\n    const foodStack = { ...this.state.foodStack };\n    this.snakeFeed02(position02, foodStack);\n    const positionStack02 = { ...this.state.positionStack02 };\n    if (this.withOtherCollision(position02, this.state.positionStack01));\n    if (this.selfCollision(position02, positionStack02));\n    if (!this.borderCollision(position02));\n    const countSnake02 = Object.keys(positionStack02).length;\n    for (let i = countSnake02 - 1; i >= 1; i--) {\n      positionStack02[i] = {};\n      const current = positionStack02[i];\n      const prev = positionStack02[i - 1];\n      current.x = prev.x;\n      current.y = prev.y;\n    }\n    positionStack02[0].x = position02.x;\n    positionStack02[0].y = position02.y;\n    this.setState({ positionStack02: positionStack02 });\n  };\n\n  handleInput01 = e => {\n    if (e.code === 'ArrowUp' && this.state.vector01 === 'ArrowDown') return;\n    if (e.code === 'ArrowDown' && this.state.vector01 === 'ArrowUp') return;\n    if (e.code === 'ArrowLeft' && this.state.vector01 === 'ArrowRight') return;\n    if (e.code === 'ArrowRight' && this.state.vector01 === 'ArrowLeft') return;\n    if (e.code === 'Space') return this.gamePaused();\n    if (\n      e.code === 'ArrowUp' ||\n      e.code === 'ArrowDown' ||\n      e.code === 'ArrowLeft' ||\n      e.code === 'ArrowRight'\n    ) {\n      this.setState({ vector01: e.code });\n    }\n  };\n\n  handleInput02 = e => {\n    if (e.code === 'KeyW' && this.state.vector02 === 'KeyS') return;\n    if (e.code === 'KeyS' && this.state.vector02 === 'KeyW') return;\n    if (e.code === 'KeyA' && this.state.vector02 === 'KeyD') return;\n    if (e.code === 'KeyD' && this.state.vector02 === 'KeyA') return;\n    if (\n      e.code === 'KeyW' ||\n      e.code === 'KeyS' ||\n      e.code === 'KeyA' ||\n      e.code === 'KeyD'\n    ) {\n      this.setState({ vector02: e.code });\n    }\n  };\n\n  move01 = () => {\n    const head01 = this.state.positionStack01[0];\n\n    if (this.state.vector01 === 'ArrowUp') {\n      this.changePosition01({ x: head01.x, y: head01.y - Field._cell });\n    }\n    if (this.state.vector01 === 'ArrowDown') {\n      this.changePosition01({ x: head01.x, y: head01.y + Field._cell });\n    }\n    if (this.state.vector01 === 'ArrowLeft') {\n      this.changePosition01({ x: head01.x - Field._cell, y: head01.y });\n    }\n    if (this.state.vector01 === 'ArrowRight') {\n      this.changePosition01({ x: head01.x + Field._cell, y: head01.y });\n    }\n  };\n\n  move02 = () => {\n    const head02 = this.state.positionStack02[0];\n    if (this.state.vector02 === 'KeyW') {\n      this.changePosition02({ x: head02.x, y: head02.y - Field._cell });\n    }\n    if (this.state.vector02 === 'KeyS') {\n      this.changePosition02({ x: head02.x, y: head02.y + Field._cell });\n    }\n    if (this.state.vector02 === 'KeyA') {\n      this.changePosition02({ x: head02.x - Field._cell, y: head02.y });\n    }\n    if (this.state.vector02 === 'KeyD') {\n      this.changePosition02({ x: head02.x + Field._cell, y: head02.y });\n    }\n  };\n\n  renderField = () => {\n    return (\n      <div\n        className='wrapper'\n        style={{\n          width: Field.calcFieldWidth,\n          height: Field.calcFieldHeight\n        }}\n      >\n        <div>{this.renderFood()}</div>\n        <div className='boxes01'>{this.renderBoxes01()}</div>\n        <div className='boxes02'>{this.renderBoxes02()}</div>\n      </div>\n    );\n  };\n\n  renderBoxes01 = () => {\n    const boxes = this.state.positionStack01;\n    return Object.keys(boxes).map(id => {\n      return <Box01 key={id} movingBox={boxes[id]} boxSize={Field._cell} />;\n    });\n  };\n\n  renderBoxes02 = () => {\n    const boxes = this.state.positionStack02;\n    return Object.keys(boxes).map(id => {\n      return <Box02 key={id} movingBox={boxes[id]} boxSize={Field._cell} />;\n    });\n  };\n\n  destroy = id => {\n    const foodStack = { ...this.state.foodStack };\n    delete foodStack[id];\n    this.setState({ foodStack: foodStack });\n  };\n\n  renderFood = () => {\n    const food = this.state.foodStack;\n    return Object.keys(food).map(id => {\n      return (\n        <Food\n          key={id}\n          food={food[id]}\n          destroy={this.destroy}\n          timeDestroy={20}\n          foodSize={Field._cell}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderField()}\n        {this.getRestart()}\n      </div>\n    );\n  }\n}\nexport default Field;\n","import React from 'react';\nimport './App.css';\nimport Field from './components/Field/Field';\n\nclass App extends React.Component {\n  render() {\n    return <Field />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}